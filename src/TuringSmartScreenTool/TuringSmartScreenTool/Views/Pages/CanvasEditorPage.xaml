<ui:Page x:Class="TuringSmartScreenTool.Views.Pages.CanvasEditorPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
      xmlns:vm="clr-namespace:TuringSmartScreenTool.ViewModels.Pages"
      xmlns:evm="clr-namespace:TuringSmartScreenTool.ViewModels.Editors"
      xmlns:editor="clr-namespace:TuringSmartScreenTool.Views.EditorControls"
      xmlns:ui="http://schemas.modernwpf.com/2019"
      xmlns:xrpb="http://XamlRadialProgressBar/DotNet"
      xmlns:ns="http://schemas.nishy-software.com/xaml/attached-properties"
      xmlns:svgc="http://sharpvectors.codeplex.com/svgc/"
      d:DataContext="{d:DesignInstance vm:CanvasEditorPageViewModel}"
      mc:Ignorable="d" 
      d:DesignHeight="450" d:DesignWidth="800">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="2*" MinWidth="300"/>
            <ColumnDefinition Width="2"/>
            <ColumnDefinition Width="*" MinWidth="320"/>
        </Grid.ColumnDefinitions>
        <Menu Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3">
            <MenuItem Header="File">
                <!--<MenuItem Header="New"/>-->
                <MenuItem Header="Save As" Command="{Binding SaveAsFileCommand}"/>
                <MenuItem Header="Open" Command="{Binding LoadFromFileCommand}"/>
                <!--<Separator />
                <MenuItem Header="Exit" Command="{x:Static SystemCommands.CloseWindowCommand}"/>-->
            </MenuItem>
        </Menu>
        <GridSplitter Grid.Row="1" Grid.Column="1" HorizontalAlignment="Stretch"/>
        <Grid Grid.Row="1" Grid.Column="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Viewbox Grid.Row="0" Margin="10">
                <Border BorderThickness="0.5">
                    <ListBox x:Name="DrawingCanvas" d:Width="320" d:Height="480"
                             MouseDown="DrawingCanvas_MouseDown"
                             Width="{Binding CanvasWidth.Value}" Height="{Binding CanvasHeight.Value}"
                             ItemsSource="{Binding EditorViewModels}"
                             SelectedIndex="{Binding SelectedEditorViewModelIndex.Value}"
                             Background="{Binding CanvasBackground.Value, Converter={StaticResource ObjectToBrush}}">
                        <ListBox.Resources>
                            <DataTemplate DataType="{x:Type evm:BaseTextBlockEditorViewModel}">
                                <Thumb PreviewMouseDown="Editor_PreviewMouseDown">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="DragDelta">
                                            <i:InvokeCommandAction Command="{Binding DragDeltaCommand}" PassEventArgsToCommand="True"/>
                                        </i:EventTrigger>
                                        <i:EventTrigger EventName="DragCompleted">
                                            <i:InvokeCommandAction Command="{Binding DragCompletedCommand}" PassEventArgsToCommand="True"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                    <Thumb.Template>
                                        <ControlTemplate TargetType="Thumb">
                                            <Grid Background="Transparent">
                                                <Viewbox Stretch="{Binding IsAutoSize.Value, Converter={StaticResource BooleanToStretch}}"
                                                         Width="{Binding Width.Value, Converter={StaticResource NullToNotDependency}}"
                                                         Height="{Binding Height.Value, Converter={StaticResource NullToNotDependency}}">
                                                    <TextBlock FontSize="{Binding FontSize.Value, Converter={StaticResource NullToNotDependency}}"
                                                               FontWeight="{Binding SelectedFontWeight.Value, Converter={StaticResource NullToNotDependency}}"
                                                               FontFamily="{Binding SelectedFontFamily.Value, Converter={StaticResource NullToNotDependency}}"
                                                               Foreground="{Binding Foreground.Value, Converter={StaticResource ObjectToBrush}}"
                                                               Text="{Binding Text.Value, Converter={StaticResource NullToNotDependency}}" />
                                                </Viewbox>
                                            </Grid>
                                        </ControlTemplate>
                                    </Thumb.Template>
                                </Thumb>
                            </DataTemplate>
                            <DataTemplate DataType="{x:Type evm:HardwareSensorIndicatorEditorViewModel}">
                                <Thumb PreviewMouseDown="Editor_PreviewMouseDown">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="DragDelta">
                                            <i:InvokeCommandAction Command="{Binding DragDeltaCommand}" PassEventArgsToCommand="True"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                    <Thumb.Template>
                                        <ControlTemplate TargetType="Thumb">
                                            <Grid Background="Transparent">
                                                <xrpb:RadialProgressBar Value="{Binding Value.Value, Mode=OneWay}"
                                                                        Maximum="{Binding Max.Value}"
                                                                        Minimum="{Binding Min.Value}"
                                                                        Foreground="{Binding Foreground.Value, Converter={StaticResource ObjectToBrush}}"
                                                                        OuterBackgroundBrush="{Binding Background.Value, Converter={StaticResource ObjectToBrush}}"
                                                                        Visibility="{Binding Indicator.Value, ConverterParameter=Pie, Converter={StaticResource EnumToVisibility}}"
                                                                        Width="{Binding Width.Value, Converter={StaticResource NullToNotDependency}}"
                                                                        Height="{Binding Height.Value, Converter={StaticResource NullToNotDependency}}"
                                                                        ArcMode="Pie"/>
                                                <xrpb:RadialProgressBar Value="{Binding Value.Value, Mode=OneWay}"
                                                                        Maximum="{Binding Max.Value}"
                                                                        Minimum="{Binding Min.Value}"
                                                                        Foreground="{Binding Foreground.Value, Converter={StaticResource ObjectToBrush}}"
                                                                        OuterBackgroundBrush="{Binding Background.Value, Converter={StaticResource ObjectToBrush}}"
                                                                        ArcBackgroundWidth="{Binding IndicatorArcWidth.Value}"
                                                                        ArcWidth="{Binding IndicatorArcWidth.Value}"
                                                                        Visibility="{Binding Indicator.Value, ConverterParameter=Ring, Converter={StaticResource EnumToVisibility}}"
                                                                        Width="{Binding Width.Value, Converter={StaticResource NullToNotDependency}}"
                                                                        Height="{Binding Height.Value, Converter={StaticResource NullToNotDependency}}"
                                                                        ArcMode="Fill"/>
                                                <ui:ProgressBar CornerRadius="0"
                                                                Value="{Binding Value.Value, Mode=OneWay}"
                                                                Maximum="{Binding Max.Value}"
                                                                Minimum="{Binding Min.Value}"
                                                                Foreground="{Binding Foreground.Value, Converter={StaticResource ObjectToBrush}}"
                                                                Background="{Binding Background.Value, Converter={StaticResource ObjectToBrush}}"
                                                                Visibility="{Binding Indicator.Value, ConverterParameter=Bar, Converter={StaticResource EnumToVisibility}}"
                                                                Width="{Binding Width.Value, Converter={StaticResource NullToNotDependency}}"
                                                                Height="{Binding Height.Value, Converter={StaticResource NullToNotDependency}}"/>
                                            </Grid>
                                        </ControlTemplate>
                                    </Thumb.Template>
                                </Thumb>
                            </DataTemplate>
                            <DataTemplate DataType="{x:Type evm:ImageEditorViewModel}">
                                <Thumb PreviewMouseDown="Editor_PreviewMouseDown">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="DragDelta">
                                            <i:InvokeCommandAction Command="{Binding DragDeltaCommand}" PassEventArgsToCommand="True"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                    <Thumb.Template>
                                        <ControlTemplate>
                                            <Grid Background="Transparent">
                                                <Image Source="{Binding ImageFilePath.Value, Converter={StaticResource NullToNotDependency}}"
                                                       Stretch="{Binding IsAutoSize.Value, Converter={StaticResource BooleanToStretch}}"
                                                       Width="{Binding Width.Value, Converter={StaticResource NullToNotDependency}}"
                                                       Height="{Binding Height.Value, Converter={StaticResource NullToNotDependency}}"/>
                                            </Grid>
                                        </ControlTemplate>
                                    </Thumb.Template>
                                </Thumb>
                            </DataTemplate>
                            <DataTemplate DataType="{x:Type evm:WeatherTextEditorViewModel}">
                                <Thumb PreviewMouseDown="Editor_PreviewMouseDown">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="DragDelta">
                                            <i:InvokeCommandAction Command="{Binding DragDeltaCommand}" PassEventArgsToCommand="True"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                    <Thumb.Template>
                                        <ControlTemplate TargetType="Thumb">
                                            <Grid Background="Transparent">
                                                <!-- Text -->
                                                <Viewbox Stretch="{Binding IsAutoSize.Value, Converter={StaticResource BooleanToStretch}}"
                                                         Width="{Binding Width.Value, Converter={StaticResource NullToNotDependency}}"
                                                         Height="{Binding Height.Value, Converter={StaticResource NullToNotDependency}}"
                                                         Visibility="{Binding IsText.Value, Converter={StaticResource BooleanToVisibility}}">
                                                    <TextBlock FontSize="{Binding FontSize.Value, Converter={StaticResource NullToNotDependency}}"
                                                               FontWeight="{Binding SelectedFontWeight.Value, Converter={StaticResource NullToNotDependency}}"
                                                               FontFamily="{Binding SelectedFontFamily.Value, Converter={StaticResource NullToNotDependency}}"
                                                               Foreground="{Binding Foreground.Value, Converter={StaticResource ObjectToBrush}}"
                                                               Text="{Binding Text.Value, Converter={StaticResource NullToNotDependency}}"/>
                                                </Viewbox>
                                                <!-- SvgIcon -->
                                                <svgc:SvgViewbox Stretch="{Binding IsAutoSize.Value, Converter={StaticResource BooleanToStretch}}"
                                                                 Width="{Binding Width.Value, Converter={StaticResource NullToNotDependency}}"
                                                                 Height="{Binding Height.Value, Converter={StaticResource NullToNotDependency}}"
                                                                 Source="{Binding SvgPath.Value, Converter={StaticResource NullToNotDependency}}"
                                                                 Visibility="{Binding IsSvgIcon.Value, Converter={StaticResource BooleanToVisibility}}"/>
                                                <!-- TextIcon -->
                                                <Viewbox Stretch="{Binding IsAutoSize.Value, Converter={StaticResource BooleanToStretch}}"
                                                         Width="{Binding Width.Value, Converter={StaticResource NullToNotDependency}}"
                                                         Height="{Binding Height.Value, Converter={StaticResource NullToNotDependency}}"
                                                         Visibility="{Binding IsTextIcon.Value, Converter={StaticResource BooleanToVisibility}}">
                                                    <TextBlock FontSize="{Binding FontSize.Value, Converter={StaticResource NullToNotDependency}}"
                                                               FontWeight="{Binding SelectedFontWeight.Value, Converter={StaticResource NullToNotDependency}}"
                                                               FontFamily="{Binding TextIconFont.Value, Converter={StaticResource NullToNotDependency}}"
                                                               Foreground="{Binding Foreground.Value, Converter={StaticResource ObjectToBrush}}"
                                                               Text="{Binding Text.Value, Converter={StaticResource NullToNotDependency}}"/>
                                                </Viewbox>
                                            </Grid>
                                        </ControlTemplate>
                                    </Thumb.Template>
                                </Thumb>
                            </DataTemplate>
                        </ListBox.Resources>
                        <ListBox.ItemsPanel>
                            <ItemsPanelTemplate>
                                <Canvas/>
                            </ItemsPanelTemplate>
                        </ListBox.ItemsPanel>
                        <ListBox.ItemContainerStyle>
                            <Style TargetType="ListBoxItem">
                                <Style.Triggers>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter Property="BorderBrush" Value="Red"/>
                                        <Setter Property="BorderThickness" Value="1"/>
                                        <Setter Property="Cursor" Value="SizeAll"/>
                                    </Trigger>
                                </Style.Triggers>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="ListBoxItem">
                                            <Border BorderBrush="{TemplateBinding BorderBrush}"
                                                    BorderThickness="{TemplateBinding BorderThickness}"
                                                    Cursor="{TemplateBinding Cursor}">
                                                <ContentPresenter />
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Canvas.Left" Value="{Binding CanvasLeft.Value, Converter={StaticResource NullToNotDependency}}" />
                                <Setter Property="Canvas.Top" Value="{Binding CanvasTop.Value, Converter={StaticResource NullToNotDependency}}" />
                                <Setter Property="Canvas.Right" Value="{Binding CanvasRight.Value, Converter={StaticResource NullToNotDependency}}" />
                                <Setter Property="Canvas.Bottom" Value="{Binding CanvasBottom.Value, Converter={StaticResource NullToNotDependency}}" />
                            </Style>
                        </ListBox.ItemContainerStyle>
                    </ListBox>
                </Border>
            </Viewbox>
            <TextBlock Grid.Row="1" HorizontalAlignment="Right" Margin="0,0,10,5">
                <Run Text="Canvas Width:"/>
                <Run Text="{Binding CanvasWidth.Value}"/>
                <Run Text=" Height:"/>
                <Run Text="{Binding CanvasHeight.Value}"/>
            </TextBlock>
        </Grid>
        <Grid Grid.Row="1" Grid.Column="2">
            <Grid.RowDefinitions>
                <RowDefinition Height="1.0*"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="1.5*"/>
            </Grid.RowDefinitions>
            <GridSplitter Grid.Row="1" Height="2" Margin="10,0,10,0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
            <Grid Grid.Row="0" Margin="10">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <ui:SimpleStackPanel Grid.Row="0" Orientation="Vertical" Style="{StaticResource PageSimpleStackPanel}">
                    <ui:SimpleStackPanel Orientation="Horizontal" Spacing="10">
                        <ComboBox VerticalAlignment="Center" MinWidth="200"
                                  ItemsSource="{Binding EditorCollection}"
                                  SelectedItem="{Binding SelectedEditor.Value}"/>
                        <ui:AppBarButton Icon="Add" ToolTip="Add" Command="{Binding AddEditorCommand}"/>
                    </ui:SimpleStackPanel>
                </ui:SimpleStackPanel>
                <ListBox Grid.Row="1" Margin="0,10,0,5" ns:ScrollViewerProperties.MouseWheelHandlingMode="OnlyScrollable"
                         ItemsSource="{Binding EditorViewModels}"
                         SelectedIndex="{Binding SelectedEditorViewModelIndex.Value}">
                    <ListBox.ItemTemplate>
                        <DataTemplate DataType="{x:Type evm:BaseEditorViewModel}">
                            <TextBlock Text="{Binding Name.Value}"/>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                    <ListBox.ItemContainerStyle>
                        <Style TargetType="ListBoxItem" BasedOn="{StaticResource DefaultListBoxItemStyle}">
                            <Setter Property="Padding" Value="12,5,12,8"/>
                        </Style>
                    </ListBox.ItemContainerStyle>
                </ListBox>
                <Grid Grid.Row="2">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <ui:SimpleStackPanel Grid.Column="0" Orientation="Horizontal" Spacing="10">
                        <ui:AppBarButton Icon="Copy" ToolTip="Duplicate" Command="{Binding DuplicateCommand}"/>
                    </ui:SimpleStackPanel>
                    <ui:SimpleStackPanel Grid.Column="2" Orientation="Horizontal" Spacing="10" HorizontalAlignment="Stretch">
                        <ui:AppBarButton Icon="59150" ToolTip="Move Up" Command="{Binding MoveUpEditorCommand}"/>
                        <ui:AppBarButton Icon="59149" ToolTip="Move Down" Command="{Binding MoveDownEditorCommand}"/>
                        <ui:AppBarButton Icon="Cancel" ToolTip="Delete" Command="{Binding DeleteSelectedEditorCommand}"/>
                    </ui:SimpleStackPanel>
                </Grid>
            </Grid>
            <ui:ScrollViewerEx Grid.Row="2" Padding="10">
                <Grid>
                    <ui:SimpleStackPanel Style="{StaticResource PageSimpleStackPanel}"
                                         Visibility="{Binding IsEditorViewModelSelected.Value, Converter={StaticResource BooleanToVisibility}}">
                        <TextBlock Text="Background" Style="{StaticResource ContentTitleTextBlock}"/>
                        <ui:SimpleStackPanel Orientation="Vertical" Style="{StaticResource ContentSimpleStackPanel}">
                            <RadioButton Content="Solid Color" GroupName="BackgroundType"
                                         IsChecked="{Binding InputCanvasBackgroundType.Value, ConverterParameter=SolidColor, Converter={StaticResource EnumToBoolean}}"/>
                            <ui:SimpleStackPanel Orientation="Horizontal" Spacing="10">
                                <Button Content="Select" Command="{Binding SelectBackgroundColorCommand}"/>
                                <Border BorderThickness="1" Width="100" Height="30"
                                        Background="{Binding InputCanvasBackgroundColor.Value, Converter={StaticResource ObjectToBrush}}"/>
                                <TextBlock Text="{Binding InputCanvasBackgroundColor.Value}"
                                           VerticalAlignment="Center"/>
                            </ui:SimpleStackPanel>
                            <RadioButton Content="Image" GroupName="BackgroundType"
                                         IsChecked="{Binding InputCanvasBackgroundType.Value, ConverterParameter=Image, Converter={StaticResource EnumToBoolean}}"/>
                            <ui:SimpleStackPanel Orientation="Horizontal" Spacing="10">
                                <Button Content="Select" Command="{Binding SelectBackgroundImageCommand}"/>
                                <TextBlock Text="{Binding InputCanvasBackgroundImagePath.Value}"
                                           VerticalAlignment="Center"/>
                            </ui:SimpleStackPanel>
                        </ui:SimpleStackPanel>
                    </ui:SimpleStackPanel>
                    <Grid Visibility="{Binding IsEditorViewModelSelected.Value, Converter={StaticResource InverseBooleanToVisibility}}">
                        <ContentPresenter Content="{Binding SelectedEditorViewModel.Value}">
                            <ContentPresenter.Resources>
                                <DataTemplate DataType="{x:Type evm:StaticTextBlockEditorViewModel}">
                                    <editor:StaticTextBlockEditor />
                                </DataTemplate>
                                <DataTemplate DataType="{x:Type evm:ImageEditorViewModel}">
                                    <editor:ImageEditor />
                                </DataTemplate>
                                <DataTemplate DataType="{x:Type evm:HardwareNameTextBlockEditorViewModel}">
                                    <editor:HardwareNameEditor />
                                </DataTemplate>
                                <DataTemplate DataType="{x:Type evm:HardwareSensorTextBlockEditorViewModel}">
                                    <editor:HardwareSensorTextEditor />
                                </DataTemplate>
                                <DataTemplate DataType="{x:Type evm:HardwareSensorIndicatorEditorViewModel}">
                                    <editor:HardwareSensorIndicator />
                                </DataTemplate>
                                <DataTemplate DataType="{x:Type evm:DateTimeTextEditorViewModel}">
                                    <editor:DateTimeTextEditor />
                                </DataTemplate>
                                <DataTemplate DataType="{x:Type evm:WeatherTextEditorViewModel}">
                                    <editor:WeatherEditor />
                                </DataTemplate>
                            </ContentPresenter.Resources>
                        </ContentPresenter>
                    </Grid>
                </Grid>
            </ui:ScrollViewerEx>
        </Grid>
    </Grid>
</ui:Page>
